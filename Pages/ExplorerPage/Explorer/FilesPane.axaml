<!--* 
This file is part of SmartCommander.  
*  
* Copyright (C) 2022 Anna Novikova 
*  
* Licensed under the GNU General Public License version 3 or later.  
* See the full license in the COPYING file or at <https://www.gnu.org/licenses/>.  
*  
* Originally obtained from: https://github.com/anovik/SmartCommander
*
* Modified by Devin Warnke on   
* Changes: Modified to work with .NET Community Toolkit instead of ReactiveUI.
* Modified to fit style of Nova App design and theming.
* Removed all backend code of SmartCommander, replaced with all personally written code.
-->

<!--*
// File Pane
// Creates the UI elements and Bindings to the viewmodel
// ToDo: Better comments and documentation
// ToDo: Reimplement interactions like Viewing, Editing, Sorting, Executing
// ToDo: Implement icons for different types
// ToDo: Item Count and Folder Count
// ToDo: Additional Columns and Row visibility based on options (Debug Tags)
-->

<UserControl
	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:NovaApp.Common"
	
	xmlns:av-Edit="using:AvaloniaEdit"
	xmlns:av-Interactivity="using:Avalonia.Xaml.Interactivity"
	xmlns:av-Interactions="using:Avalonia.Xaml.Interactions.Core"
	xmlns:fa-Windowing="using:FluentAvalonia.UI.Windowing"
	xmlns:novaApp-Assets="using:NovaApp.Assets"
	xmlns:novaApp-Common="clr-namespace:NovaApp.Common"
	xmlns:novaApp-ExplorerPage="using:NovaApp.Pages.ExplorerPage"
	xmlns:novaApp-Explorer="clr-namespace:NovaApp.Pages.ExplorerPage.Explorer"

	mc:Ignorable="d"
	
	d:DesignWidth="1280"
	d:DesignHeight="720"
	
	x:CompileBindings="True"
	x:Class="NovaApp.Pages.ExplorerPage.Explorer.FilesPane"
	x:DataType="novaApp-Explorer:FilesPaneViewModel"
	
	Loaded="Loaded"
	Unloaded="Unloaded">
	
	<Design.DataContext>
		<novaApp-Explorer:FilesPaneViewModel/>
	</Design.DataContext>
	
	<av-Interactivity:Interaction.Behaviors>
		<av-Interactions:EventTriggerBehavior EventName="Tapped">
			<av-Interactions:CallMethodAction TargetObject="{Binding}" MethodName="Tapped"/>
		</av-Interactions:EventTriggerBehavior>
	</av-Interactivity:Interaction.Behaviors>
	
	<Grid RowDefinitions="Auto,*,Auto">
		<Grid Grid.Row="0" Grid.Column="0" ColumnDefinitions="Auto, 5, *" Margin="5">
			<ComboBox Grid.Column="0" Name="DriveComboBox" ItemsSource="{Binding DriveList}" SelectedItem="{Binding SelectedDrive}" IsTabStop="False"/>
			<TextBox Grid.Column="2" IsTabStop="False" Text="{Binding CurrentDirectory}"/>
		</Grid>
		
		<DataGrid Name="PaneDataGrid"
			AutoGenerateColumns="False"
			BorderBrush="{Binding GridBorderBrush}"
			BorderThickness="1"
			CanUserResizeColumns="True"
			CanUserSortColumns="True"
			IsFocused="{Binding IsSelected, Mode=OneWayToSource}"
			ItemsSource="{Binding ExplorerList}"
			Margin="5" Grid.Row="1" IsTabStop="True"
			SelectedItem="{Binding CurrentItem, Mode=TwoWay}">
			
			<DataGrid.Styles>
				<Style Selector="DataGridCell:current /template/ Rectangle#CurrencyVisual">
					<Setter Property="IsVisible" Value="False" />
				</Style>
				<Style Selector="DataGrid:focus DataGridCell:current /template/ Grid#FocusVisual">
					<Setter Property="IsVisible" Value="False" />
				</Style>
				<Style Selector="DataGridCell:invalid /template/ Rectangle#InvalidVisualElement">
					<Setter Property="IsVisible" Value="False" />
				</Style>
			</DataGrid.Styles>
			
			<DataGrid.ContextFlyout>
				<MenuFlyout>
					<MenuItem Header="{x:Static novaApp-Assets:Resources.View}" Command="{Binding ViewCommand}"/>
					<MenuItem Header="{x:Static novaApp-Assets:Resources.Edit}" Command="{Binding EditCommand}"/>
				</MenuFlyout>
			</DataGrid.ContextFlyout>
			
			<DataGrid.Columns>
				<DataGridTextColumn Width="2*" Header="Name" Binding="{Binding Name}" DisplayIndex="1"/>
				<DataGridTextColumn Width="*" Header="Date modified" Binding="{Binding DateModified}" IsReadOnly="True" DisplayIndex="2"/>
				<DataGridTextColumn Width="*" Header="Type" Binding="{Binding Extension, Converter={x:Static local:Converters.ExtensionConverter}}" IsReadOnly="True" DisplayIndex="3"/>
				<DataGridTextColumn Width="*" Header="Size" Binding="{Binding Size, Converter={x:Static local:Converters.SizeConverter}}" IsReadOnly="True" DisplayIndex="4"/>
			</DataGrid.Columns>
			
			<av-Interactivity:Interaction.Behaviors>
				<av-Interactions:EventTriggerBehavior EventName="Sorting" SourceObject="{Binding ExplorerList}">
					<av-Interactions:CallMethodAction TargetObject="{Binding}" MethodName="SortingStarted"/>
				</av-Interactions:EventTriggerBehavior>
				
				<av-Interactions:EventTriggerBehavior EventName="CellPointerPressed" SourceObject="{Binding ExplorerList}">
					<av-Interactions:CallMethodAction TargetObject="{Binding}" MethodName="CellPointerPressed"/>
				</av-Interactions:EventTriggerBehavior>
				
				<av-Interactions:EventTriggerBehavior EventName="DoubleTapped" SourceObject="{Binding ExplorerList}">
					<av-Interactions:CallMethodAction TargetObject="{Binding}" MethodName="DoubleTapped"/>
				</av-Interactions:EventTriggerBehavior>
				
				<av-Interactions:EventTriggerBehavior EventName="BeginningEdit" SourceObject="{Binding ExplorerList}">
					<av-Interactions:CallMethodAction TargetObject="{Binding}" MethodName="BeginningEdit"/>
				</av-Interactions:EventTriggerBehavior>
				
				<av-Interactions:EventTriggerBehavior EventName="SelectionChanged" SourceObject="{Binding ExplorerList}">
					<av-Interactions:CallMethodAction TargetObject="{Binding}" MethodName="SelectionChanged"/>
				</av-Interactions:EventTriggerBehavior>
			</av-Interactivity:Interaction.Behaviors>
		</DataGrid>
		<TextBlock Grid.Row="2" Margin="10" Text="Files: 0, Folders: 0"/>
	</Grid>
</UserControl>